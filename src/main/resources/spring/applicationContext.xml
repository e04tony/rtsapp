<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<context:component-scan base-package="com.mercury.rtsapp">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<util:properties id="appconfig" location="classpath:spring/rts.properties" />

	<bean id="rtsDataSource" class="oracle.jdbc.pool.OracleDataSource"
		destroy-method="close">
		<property name="driverClassName" value="#{appconfig.db_driverClassName}" />
		<property name="url" value="#{appconfig.db_url}" />
		<property name="username" value="#{appconfig.db_username}" />
		<property name="password" value="#{appconfig.db_password}" />
		<property name="maxActive" value="200" />
		<property name="maxIdle" value="-1" />
		<property name="maxWait" value="-1" />
		<property name="validationQuery" value="select 1" />
		<property name="testOnBorrow" value="true" />
	</bean>


	<!-- Hibernate session factory -->
	<!-- <bean id="sessionFactory" name="sessionFactory" -->
	<!-- class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> -->
	<!-- <property name="dataSource" ref="fishingDataSource" /> -->
	<!-- <property name="packagesToScan"> -->
	<!-- <array> -->
	<!-- <value>org.travis.fishingapp.web.domain</value> -->
	<!-- </array> -->
	<!-- </property> -->
	<!-- not used, beacuase we use java annotation instead -->
	<!-- <property name="mappingLocations"> <list> <value>classpath*:**/*.hbm.xml</value> 
		</list> </property> -->
	<!-- <property name="configLocation"> <value> classpath:orm/hibernate.cfg.xml -->
	<!-- </value> </property> -->
	<!-- <property name="hibernateProperties"> -->
	<!-- <props> -->
	<!-- <prop key="hibernate.dialect"> -->
	<!-- org.hibernate.dialect.MySQL5Dialect -->
	<!-- </prop> -->
	<!-- <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop> -->
	<!-- <prop key="hibernate.format_sql">true</prop> -->
	<!-- <prop key="hibernate.show_sql">true</prop> -->
	<!-- config for hibernate search -->
	<!-- <prop key="hibernate.search.default.directory_provider"> -->
	<!-- org.hibernate.search.store.impl.FSDirectoryProvider -->
	<!-- </prop> -->
	<!-- <prop key="hibernate.search.default.indexBase"> -->
	<!-- #{appconfig.search_indexbase} -->
	<!-- </prop> -->
	<!-- <prop key="hibernate.current_session_context_class">thread</prop> -->
	<!-- <prop key="hibernate.hbm2ddl.auto">validate</prop> -->
	<!-- <prop key="hibernate.enable_lazy_load_no_trans">true</prop> -->
	<!-- <prop key="hibernate.jdbc.batch_size">1000</prop> -->
	<!-- <prop key="hibernate.cache.use_second_level_cache">false</prop> -->
	<!-- </props> -->
	<!-- </property> -->
	<!-- </bean> -->


	<!-- enable the configuration of transactional behavior based on annotations -->
	<!-- <tx:annotation-driven transaction-manager="txManager" /> a PlatformTransactionManager 
		is still required -->

	<!-- <bean id="txManager" -->
	<!-- class="org.springframework.orm.hibernate4.HibernateTransactionManager"> -->
	<!-- (this dependency is defined somewhere else) -->
	<!-- <property name="sessionFactory" ref="sessionFactory" /> -->
	<!-- </bean> -->

	<!-- the config of persistence unit -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="rtsPersist" />
		<property name="dataSource" ref="rtsDataSource" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Java Mail -->
	<!-- 
	<bean class="org.springframework.mail.javamail.JavaMailSenderImpl"
		id="mailSender">
		<property name="host" value="#{appconfig.mail_host}"></property>
		<property name="username" value="#{appconfig.mail_username}"></property>
		<property name="password" value="#{appconfig.mail_password}"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">#{appconfig.mail_smtp_auth}</prop>
				<prop key="mail.smtp.port">#{appconfig.mail_smtp_port}</prop>
				<prop key="mail.smtp.host">#{appconfig.mail_smtp_host}</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	-->
	
	<!-- freemaker
	<bean
		class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean"
		id="freemarkerConfiguration" name="freemarkerConfiguration">
		-->
		<!-- Turn this off to always load via SpringTemplateLoader -->
		<!-- 
		<property name="preferFileSystemAccess" value="false"></property>
		<property name="templateLoaderPath" value="classpath:/"></property>
	</bean>
		 -->


</beans>